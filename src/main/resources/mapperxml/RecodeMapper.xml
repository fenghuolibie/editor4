<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.RecodeMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Recode">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="am_content" jdbcType="VARCHAR" property="amContent" />
    <result column="pm_content" jdbcType="VARCHAR" property="pmContent" />
    <result column="night_content" jdbcType="VARCHAR" property="nightContent" />
    <result column="week_day" jdbcType="VARCHAR" property="weekDay" />
    <result column="date_time" jdbcType="VARCHAR" property="dateTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="week_id" jdbcType="VARCHAR" property="weekId" />
    <result column="recode_create" jdbcType="TIMESTAMP" property="recodeCreate" />
    <result column="recode_modified" jdbcType="TIMESTAMP" property="recodeModified" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, am_content, pm_content, night_content, week_day, date_time, state, week_id, recode_create,
    recode_modified
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recode
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recode
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.Recode">
    insert into recode (id, user_id, am_content, 
      pm_content, night_content, week_day, 
      date_time, state, week_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{amContent,jdbcType=VARCHAR}, 
      #{pmContent,jdbcType=VARCHAR}, #{nightContent,jdbcType=VARCHAR}, #{weekDay,jdbcType=VARCHAR}, 
      #{dateTime,jdbcType=VARCHAR},#{state},#{weekId}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Recode">
    insert into recode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="amContent != null">
        am_content,
      </if>
      <if test="pmContent != null">
        pm_content,
      </if>
      <if test="nightContent != null">
        night_content,
      </if>
      <if test="weekDay != null">
        week_day,
      </if>
      <if test="dateTime != null">
        date_time,
      </if>
      <if test="recodeCreate != null">
        recode_create,
      </if>
      <if test="recodeModified != null">
        recode_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="amContent != null">
        #{amContent,jdbcType=VARCHAR},
      </if>
      <if test="pmContent != null">
        #{pmContent,jdbcType=VARCHAR},
      </if>
      <if test="nightContent != null">
        #{nightContent,jdbcType=VARCHAR},
      </if>
      <if test="weekDay != null">
        #{weekDay,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="recodeCreate != null">
        #{recodeCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="recodeModified != null">
        #{recodeModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Recode">
    update recode
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="amContent != null">
        am_content = #{amContent,jdbcType=VARCHAR},
      </if>
      <if test="pmContent != null">
        pm_content = #{pmContent,jdbcType=VARCHAR},
      </if>
      <if test="nightContent != null">
        night_content = #{nightContent,jdbcType=VARCHAR},
      </if>
      <if test="weekDay != null">
        week_day = #{weekDay,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        date_time = #{dateTime,jdbcType=VARCHAR},
      </if>
      <if test="recodeCreate != null">
        recode_create = #{recodeCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="recodeModified != null">
        recode_modified = #{recodeModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateRecodeByIdDay" parameterType="com.example.entity.Recode">
     UPDATE recode SET am_content = #{amContent},pm_content = #{pmContent},night_content = #{nightContent}, state = '1'
     WHERE user_id = #{userId} AND date_time like '${dateTime}'
  </update>
  <select id="selectUserByDate" resultType="Integer">
     select count(*) FROM recode WHERE user_id = #{userId} and date_time like '${dateTime}'
  </select>
  <select id="selectUserRecodeByUid7days" resultMap="BaseResultMap">
     SELECT am_content,pm_content,night_content,week_day,date_time,recode_modified from recode
     where user_id = #{userId} and date(date_time) BETWEEN #{dateTime} and DATE_ADD(#{dateTime}, INTERVAL 6 DAY)
  </select>
  <select id="selectUserRecodeByName7days" resultMap="BaseResultMap">
     SELECT am_content,pm_content,night_content,week_day,date_time,week_id
     FROM recode r JOIN `user`u on r.user_id = u.id join department d on u.department_id = d.id
     <where>
       user_name = #{userName} and date(date_time) BETWEEN #{dateTime} and DATE_ADD(#{dateTime}, INTERVAL 6 DAY)
       <if test="departmentName != '' and departmentName != null">
         and d.department_name like '${departmentName}'
       </if>
     </where>
  </select>
  <select id="selectUserRecodeByMonth" resultType="com.example.dto.recode.DateByWeek1DTO">
     SELECT u.user_name userName,am_content amContent,pm_content pmContent,night_content nightContent,week_day weekDay,date_time dateTime
     FROM recode r JOIN `user`u on r.user_id = u.id
    <where>
      r.date_time like '${dateTime}%'
      <if test="userName != '' and userName != null">
        and u.user_name like '${userName}'
      </if>
    </where>
    order by u.user_level DESC, date_time
  </select>
  <select id="selectUserRecodeByQuarter" resultType="com.example.dto.recode.DateByWeek1DTO">
     SELECT u.user_name userName,am_content amContent,pm_content pmContent,night_content nightContent,week_day weekDay,date_time dateTime
     FROM recode r JOIN `user`u on r.user_id = u.id
    <where>
      YEAR(date_time) = #{year} and quarter(date_time) = #{quarter}
      <if test="userName != '' and userName != null">
        and u.user_name like '${userName}'
      </if>
    </where>
    order by u.user_level DESC, date_time
  </select>
  <select id="selectUserRecodeByYear" resultType="com.example.dto.recode.DateByWeek1DTO">
    SELECT u.user_name userName,am_content amContent,pm_content pmContent,night_content nightContent,week_day weekDay,date_time dateTime
    FROM recode r JOIN `user`u on r.user_id = u.id
    <where>
      YEAR(date_time) = #{year}
      <if test="userName != '' and userName != null">
        and u.user_name like '${userName}'
      </if>
    </where>
    order by u.user_level DESC, date_time
  </select>
  <select id="selectUserRecodeByLevel" resultType="com.example.dto.recode.DateByWeek1DTO">

  </select>
  <select id="selectUserRecodeByweekId" resultType="com.example.dto.recode.DateByWeekDTO">
    SELECT am_content amContent,pm_content pmContent,night_content nightContent,week_day weekDay,date_time dateTime,recode_modified recodeModified
    FROM recode r
    WHERE week_id like '${weekId}'
  </select>
</mapper>